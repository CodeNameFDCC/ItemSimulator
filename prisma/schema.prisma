// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//============================================================
//============================================================
//============================================================
//============================================================
model Account {
  id           String @id @default(uuid())
  userName     String @unique
  userEmail    String @unique
  userPassword String

  character Character[]
}

model Character {
  id             String @id @default(uuid())
  userName       String
  characterName  String @unique
  characterImage String

  damage  Int   @default(10)
  health  Int   @default(100)
  defense Int   @default(1)
  atkspd  Float @default(1)

  account   Account @relation(fields: [accountId], references: [id], onDelete: Cascade)
  accountId String

  inventory   Inventory?
  inventoryId String?    @unique // 1:1 관계를 위해 unique 제약조건 추가
}

model Inventory {
  id           String  @id @default(uuid())
  userName     String
  userId       String?
  chracterName String
  money        Int     @default(10000)

  character   Character @relation(fields: [characterId], references: [id], onDelete: Cascade)
  characterId String    @unique // 1:1 관계를 위해 unique 제약조건 추가
  item        Item[]
}

model Item {
  id           String  @id @default(uuid())
  itemName     String?
  userName     String?
  userId       String?
  chracterName String?
  characterId  String?

  itemImage  String  @default("")
  isEquip    Boolean @default(false)
  addDamage  Int     @default(0)
  addHealth  Int     @default(0)
  addDefense Int     @default(0)
  addAtkSpd  Int     @default(0)

  inventory   Inventory @relation(fields: [inventoryId], references: [id], onDelete: Cascade)
  inventoryId String
}

//============================================================
//============================================================
//============================================================
//============================================================
