// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

//============================================================
//============================================================
//============================================================
//============================================================

model User {
  id       String      @id @default(uuid())
  email    String      @unique
  loginId  String      @unique
  password String
  createAt DateTime    @default(now())
  updateAt DateTime    @updatedAt
  userInfo UserInfo?
  charater Character[]
}

model UserInfo {
  id   String  @id @default(uuid())
  img  String?
  desc String?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique
}

model Character {
  id        String     @id @default(uuid())
  nickName  String     @unique
  atkDmg    Int        @default(10)
  dfense    Int        @default(1)
  health    Int        @default(100)
  gold      Int        @default(10000)
  inventory Inventory?
  equipment Equipment?

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
}

model Inventory {
  id    String @id @default(uuid())
  items Item[]

  character   Character @relation(fields: [characterId], references: [id], onDelete: Cascade)
  characterId String    @unique
}

model Equipment {
  id    String @id @default(uuid())
  items Item[]

  character   Character @relation(fields: [characterId], references: [id], onDelete: Cascade)
  characterId String    @unique
}

model Shop {
  id    String @id @default(uuid())
  name  String
  desc  String
  items Item[]
}

model Item {
  id        String @id @default(uuid())
  img       String
  type      String
  name      String
  desc      String
  price     Int
  addAtk    Int
  addDfense Int
  addHealth Int

  inventory Inventory? @relation(fields: [invenId], references: [id], onDelete: Cascade)
  invenId   String?
  equipment Equipment? @relation(fields: [equipId], references: [id], onDelete: Cascade)
  equipId   String?
  shop      Shop?      @relation(fields: [shopId], references: [id], onDelete: Cascade)
  shopId    String?
}

//============================================================
//============================================================
//============================================================
//============================================================
